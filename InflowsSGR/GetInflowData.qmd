This is a qmd to get Sugar River Outflow data for Sunapee. 

We need a USGS gauged stream, and Sugar River is likely to be the closest thing that we have to a gauged stream. I am using an API to pull from the NH Dam Bureau website. It is then saved to GitHub, then I will use the saved data to pull the most recent data. 

This will produce the SugarOutflow.csv

This is the River Discharge that I want
{
        "id": "2a32f4a1-5682-4b75-9e58-9c87f35d6b89",
        "name": "Observed River Discharge",
        "code": "SCFNH.USGS.QIN.PT1H",
        "parameter": "227e7f89-91e8-40a0-a866-e3290c6d1396",
        "tree_node": "31bae2a8-018d-48d1-9ebe-b13ae3860a57",
        "location": "a23ce698-4af4-40e2-a1f2-7005991619aa"
    },

link to guide: https://nhdes.rtiamanzi.org/media/Public_Data_Access_VMdBVzN.pdf

```{r packages}
install.packages(c("httr", "jsonlite"))
library(httr)
library(jsonlite)
```
Many thanks to Austin for actually figuring out how to find the data for this. 
```{r Sugar River Discharge}
ts_id <- '2a32f4a1-5682-4b75-9e58-9c87f35d6b89' #ID
start_time <- "2016-05-17T00:00:00" #first record is 2016-05-17 17:00:00
end_time <- "2025-04-14T00:00:00"

ts_url <- paste0('https://nhdes.rtiamanzi.org/api/timeseries/',ts_id,'/values/?start=',
                 start_time, 
                 '&end=',
                 end_time)

api_res <- GET(ts_url)

api_content <- content(api_res)

pull_dates <- sapply(api_content, function(i) unlist(i)[[3]])
pull_values <- sapply(api_content, function(i) unlist(i)[[4]])

output_df <- data.frame(date = lubridate::as_datetime(pull_dates), value = as.numeric(pull_values))
output_df <- output_df |> rename(discharge_cfs = value)
write.csv(output_df, "SugarOutflow.csv")
```



